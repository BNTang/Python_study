# -*- coding: utf-8 -*-

# @Time    : 2025-06-04
# @Author  : 程序员NEO
# @FileName: example.py
# @Software: VSCode
# @Email   : it666@linux.do
# @Github  : https://github.com/BNTang
# @Description: 01-Python-面向对象-定义类

"""
====================================
Python 面向对象编程 - 定义类
====================================

核心概念：
1. 类 (Class) - 对象的模板/蓝图
2. 对象 (Object) - 类的实例
3. 实例化 - 从类创建对象的过程
4. 抽象 - 从对象中提取共同特征形成类

关系图：
    类 ------实例化------> 对象
    类 <-----抽象------- 对象

对象的组成：
- 属性 (Attributes) - 静态特征 (如：年龄、身高、体重)
- 方法 (Methods) - 动态行为 (如：跑步、吃饭、说话)
"""

# ============================================================================
# 1. 类的基本定义语法
# ============================================================================

# 基本语法格式：
# class 类名:
#     pass

# 示例1: 定义一个简单的类
class Person:
    """人类 - 经典类的定义"""
    pass

class Money:
    """钱类 - 演示类名命名规范"""
    pass

# ============================================================================
# 2. 函数 vs 类 的定义对比
# ============================================================================

# 函数定义 (使用 def 关键字)
def run():
    """函数定义示例"""
    pass

# 类定义 (使用 class 关键字)
class Animal:
    """动物类定义示例"""
    pass

# ============================================================================
# 3. 类名命名规范 - 大驼峰命名法
# ============================================================================

# ✅ 正确示例：
class Student:          # 单个单词，首字母大写
    pass

class StudentInfo:      # 多个单词，每个单词首字母大写
    pass

class BankAccount:      # 多个单词，每个单词首字母大写
    pass

# ❌ 错误示例（不符合规范）：
# class student:        # 首字母应该大写
# class student_info:   # 应该使用大驼峰而不是下划线
# class Student():      # 不应该加括号

# ============================================================================
# 4. 类的分类概念
# ============================================================================

# 经典类 (Classic Class) - Python 2.x 风格
class ClassicClass:
    """经典类定义"""
    pass

# 新式类 (New-style Class) - Python 3.x 推荐，继承自 object
class NewStyleClass(object):
    """新式类定义 - 显式继承 object"""
    pass

# 在 Python 3.x 中，所有类默认都是新式类
class ModernClass:
    """现代类定义 - Python 3.x 中默认为新式类"""
    pass

# ============================================================================
# 5. 实践练习 - 定义不同类型的类
# ============================================================================

class Car:
    """汽车类"""
    pass

class House:
    """房屋类"""
    pass

class Computer:
    """计算机类"""
    pass

class MobilePhone:
    """手机类 - 演示多单词类名"""
    pass

# ============================================================================
# 学习要点总结：
# ============================================================================
"""
🔥 重点记忆：

1. 定义类的关键字：class (不是 def)
2. 类名命名规范：大驼峰命名法 (每个单词首字母大写)
3. 类定义后面用冒号 : 不用括号 ()
4. pass 语句用于保持代码结构完整性
5. 类是对象的模板，对象是类的实例

💡 下节预告：
- 如何通过类创建对象（实例化）
- 如何给对象添加属性
- 如何给对象添加方法
"""

if __name__ == "__main__":
    print("类定义完成！")
    print("已定义的类：Person, Money, Animal, Student, Car, House, Computer, MobilePhone")
    print("下一步：学习如何创建对象实例")
